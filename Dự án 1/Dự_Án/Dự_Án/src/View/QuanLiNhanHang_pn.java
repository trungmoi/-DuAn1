/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import ConnectDB.ConnectDB;
import DAO.DAO_NhanHang;

import java.sql.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.NhanHang;

/**
 *
 * @author Admin
 */
public class QuanLiNhanHang_pn extends javax.swing.JPanel {

    private DAO.DAO_NhanHang rp = new DAO_NhanHang();
    private DefaultTableModel model = new DefaultTableModel();
    private int i;
    private static Connection conn;
    List<NhanHang> arrNH = new ArrayList<>();
    DAO_NhanHang NH = new DAO_NhanHang();
    ArrayList<Integer> idNh = new ArrayList();

    public QuanLiNhanHang_pn() {
        initComponents();
        arrNH = NH.ListNhanHang();
        this.fillToTbl();
        txtIdNhanHang.setEnabled(false);
        idNh = NH.idNH();
    }

    public void fillToTbl() {
        String[] title = {"ID", "Tên nhãn hàng"};
        DefaultTableModel model = new DefaultTableModel(title, 0);
        arrNH = NH.ListNhanHang();
        for (NhanHang nhanHang : arrNH) {
            Object[] rows = {nhanHang.getIdNhanHang(), nhanHang.getTenNhanHang()};
            model.addRow(rows);
        }
        tblNhanHang.setModel(model);
    }

    public void fillToTbl2() {
        String[] title = {"ID", "Tên nhãn hàng"};
        DefaultTableModel model = new DefaultTableModel(title, 0);
        for (NhanHang nhanHang : arrNH) {
            Object[] rows = {nhanHang.getIdNhanHang(), nhanHang.getTenNhanHang()};
            model.addRow(rows);
        }
        tblNhanHang.setModel(model);
    }

    public void reset(){
        txtTenNhanHang.setText(null);
        txtIdNhanHang.setText(null);
        txtFind.setText(null);
        btAdd.setEnabled(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanHang = new javax.swing.JTable();
        txtIdNhanHang = new javax.swing.JTextField();
        txtTenNhanHang = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btAdd = new javax.swing.JButton();
        btClear = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        new_new = new javax.swing.JButton();
        btUpdate1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jpnRoot.setBackground(new java.awt.Color(204, 204, 255));
        jpnRoot.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblNhanHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblNhanHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblNhanHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanHangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblNhanHangMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanHang);
        if (tblNhanHang.getColumnModel().getColumnCount() > 0) {
            tblNhanHang.getColumnModel().getColumn(0).setMinWidth(80);
            tblNhanHang.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        jpnRoot.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 428, 966, 450));

        txtIdNhanHang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jpnRoot.add(txtIdNhanHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 223, 410, 33));

        txtTenNhanHang.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jpnRoot.add(txtTenNhanHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 305, 410, 33));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("ID Nhãn Hàng");
        jpnRoot.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 174, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("Tên Nhãn Hàng");
        jpnRoot.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 268, -1, -1));

        txtFind.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtFind.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        txtFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindActionPerformed(evt);
            }
        });
        txtFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindKeyReleased(evt);
            }
        });
        jpnRoot.add(txtFind, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 377, 379, 33));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Tìm Kiếm");
        jpnRoot.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 376, -1, 33));

        btAdd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btAdd.setText("Add");
        btAdd.setBorderPainted(false);
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });
        jpnRoot.add(btAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 264, 86, -1));

        btClear.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btClear.setText("Clear");
        btClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearActionPerformed(evt);
            }
        });
        jpnRoot.add(btClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(667, 310, 89, -1));

        btDelete.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });
        jpnRoot.add(btDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 310, 86, -1));

        new_new.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        new_new.setText("Refersh");
        new_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_newActionPerformed(evt);
            }
        });
        jpnRoot.add(new_new, new org.netbeans.lib.awtextra.AbsoluteConstraints(1237, 382, -1, -1));

        btUpdate1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btUpdate1.setText("Update");
        btUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdate1ActionPerformed(evt);
            }
        });
        jpnRoot.add(btUpdate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(667, 264, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Danh Sách Nhãn Hàng");
        jpnRoot.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 42, -1, 33));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/MegaTron.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jpnRoot.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1710, 1010));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1710, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpnRoot, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1010, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpnRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblNhanHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanHangMouseClicked
        int row = tblNhanHang.getSelectedRow();
        NhanHang nh = arrNH.get(row);
        txtIdNhanHang.setText(String.valueOf(nh.getIdNhanHang()));
        txtTenNhanHang.setText(nh.getTenNhanHang());
        btAdd.setEnabled(false);
        btDelete.setEnabled(true);
        btUpdate1.setEnabled(true);
        btClear.setEnabled(true);
    }//GEN-LAST:event_tblNhanHangMouseClicked

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        // làm lại
        txtTenNhanHang.setText(null);
        txtIdNhanHang.setText(null);
        txtFind.setText(null);
        btAdd.setEnabled(true);
        btDelete.setEnabled(false);
        btUpdate1.setEnabled(false);
        btClear.setEnabled(false);
        txtTenNhanHang.requestFocus();
//        ArrayList listId = new ArrayList<>();
//        for (NhanHang nhanHang : arrNH) {
//            listId.add(nhanHang.getIdNhanHang());
//        }
//        int id =0;
//        
//            id = (int) Collections.max(listId)+1;
//        
//        txtIdNhanHang.setText(String.valueOf(id));
        fillToTbl();
    }//GEN-LAST:event_btClearActionPerformed

    public boolean chechNull() {
        if (txtTenNhanHang.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin");
            return false;
        } else {
            return true;
        }
    }

//    public boolean checkId(){
//        for (int i = 0; i < idNh.size(); i++) {
//            if(idNh.get(i)==Integer.parseInt(txtIdNhanHang.getText())){
//                JOptionPane.showMessageDialog(this,"Mã đã bị trùng");
//                return false;
//            }
//        }
//        return true;
//    }

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed

        if (chechNull()) {
            try {
                conn = ConnectDB.getConN();
                String sql = ("insert into NhanHang_SP\n" + "values (?)");
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setString(1, txtTenNhanHang.getText().trim());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Thêm thành công");
                this.fillToTbl();
            } catch (SQLException e) {
                System.out.println("Loi" + e);
            }
        }

    }//GEN-LAST:event_btAddActionPerformed

    private void new_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_newActionPerformed
        arrNH = NH.ListNhanHang();
        this.fillToTbl();

        btAdd.setEnabled(true);
        btClear.setEnabled(true);
        btDelete.setEnabled(true);
        btUpdate1.setEnabled(true);
    }//GEN-LAST:event_new_newActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        int i = tblNhanHang.getSelectedRow();
        if (i > 0) {
            int choose = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không", "Comfirm", JOptionPane.YES_OPTION);
            if (choose == JOptionPane.YES_OPTION) {
                try {
                    conn = ConnectDB.getConN();
            String sql = ("Delete from sanPham where id_NhanHang = ?");
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.valueOf(txtIdNhanHang.getText()));
            ps.executeUpdate();
            String sql2 = ("Delete from NhanHang_SP where id_Nh = ?");
            ps = conn.prepareStatement(sql2);
            ps.setInt(1, Integer.valueOf(txtIdNhanHang.getText()));
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            this.fillToTbl();
                    txtTenNhanHang.setText(null);
                    txtIdNhanHang.setText(null);
                    txtFind.setText(null);
                    btAdd.setEnabled(true);
                } catch (SQLException e) {
                    System.out.println("Loi" + e);
                    
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui Lòng chọn Nhãn hàng cần Xoá");
            return;
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void txtFindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindKeyReleased
        arrNH.clear();
//        arrNH = NH.tim_nh((txtFind.getText()));
//        this.fillToTbl(); = %"+txtFind.getText()+"%
//        fill(rp.tim_nh(txtFind.getText().trim()));
        try {

            conn = ConnectDB.getConN();
            String a = "SELECT Id_Nh, TenNhanHang FROM NhanHang_SP WHERE CAST(Id_Nh AS NVARCHAR) LIKE '%" + txtFind.getText().trim() + "%' OR TenNhanHang LIKE '%" + txtFind.getText().trim() + "%'";
//            String sql = ("select id_nh, tenNhanHang from NhanHang_SP where TenNhanHang like N'%"+txtFind.getText().trim()+"%' or Id_Nh "+txtFind.getText().trim()+" ");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(a);
            while (rs.next()) {
                NhanHang nh = new NhanHang();
                nh.setIdNhanHang(rs.getInt(1));
                nh.setTenNhanHang(rs.getString(2).trim());
                arrNH.add(nh);
            }
            fillToTbl2();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_txtFindKeyReleased

    private void txtFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFindActionPerformed

    private void btUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdate1ActionPerformed
        // TODO add your handling code here:
        int i = tblNhanHang.getSelectedRow();
        if (i > 0) {
            if (chechNull()) {
                try {
                    conn = ConnectDB.getConN();
                    String sql = ("Update NhanHang_SP set TenNhanHang = ? where id_Nh = ?");
                    PreparedStatement ps = conn.prepareStatement(sql);
                    ps.setString(1, txtTenNhanHang.getText().trim());
                    ps.setInt(2, Integer.valueOf(txtIdNhanHang.getText()));
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                    this.fillToTbl();
                    txtTenNhanHang.setText(null);
                    txtIdNhanHang.setText(null);
                    txtFind.setText(null);
                    btAdd.setEnabled(true);
                } catch (SQLException e) {
                    System.out.println("Loi" + e);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui Lòng chọn Nhãn hàng cần Sửa");
            return;
        }

    }//GEN-LAST:event_btUpdate1ActionPerformed

    private void tblNhanHangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanHangMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblNhanHangMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btClear;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btUpdate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    public static final javax.swing.JPanel jpnRoot = new javax.swing.JPanel();
    private javax.swing.JButton new_new;
    private javax.swing.JTable tblNhanHang;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtIdNhanHang;
    private javax.swing.JTextField txtTenNhanHang;
    // End of variables declaration//GEN-END:variables

    private void fill(ArrayList<model.NhanHang> tim_nh) {
        model = (DefaultTableModel) tblNhanHang.getModel();
        model.setRowCount(0);
        for (model.NhanHang object : tim_nh) {
            model.addRow(object.nhanhang());
        }
    }
}
